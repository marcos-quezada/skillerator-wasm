<MultiStepsForm @ref="ParentForm" Id="BrexitToolForm">
    <MultiStepsFormCard Name="Nature of application">
        <div>
            <SemGrid Columns="GridUnit.One" Classes="@(new [] {GridClass.Centered})">
                <SemGridRow Columns="GridUnit.Two">
                    <SemGridColumn Classes="@(new[] { ColumnClass.Center_Aligned })">
                        <p style="font-size: 1.28571429rem;">What do you want to apply for?</p>
                    </SemGridColumn>
                </SemGridRow>

                <SemGridRow Columns="GridUnit.Two">
                    <SemGridColumn Classes="@(new[] { ColumnClass.Left_Aligned })">
                        <SemFormField For="@(() => ParentForm.userInfo.isRegistration)">
                            <SemCheckbox @bind-Value="ParentForm.userInfo.isRegistration" Label="Registration of UK citizens at the Foreigners Office"></SemCheckbox>
                        </SemFormField>
                        <SemFormField For="@(() => ParentForm.userInfo.isCertificate)">
                            <SemCheckbox @bind-Value="ParentForm.userInfo.isCertificate" Label="Application for a fictional certificate for UK citizens"></SemCheckbox>
                        </SemFormField>
                    </SemGridColumn>
                </SemGridRow>
            </SemGrid>
        </div>
    </MultiStepsFormCard>
    <MultiStepsFormCard Name="Personal details" ValidationGroup="personal">
        <SemGrid Columns="GridUnit.One" Classes="@(new [] {GridClass.Centered})">
            <SemGridRow Columns="GridUnit.Two">
                <SemGridColumn Classes="@(new[] { ColumnClass.Center_Aligned })">
                    <p>Personal data</p>
                    <p>Persönliche Angaben</p>
                </SemGridColumn>
            </SemGridRow>
            <SemGridRow Columns="GridUnit.Two">
                <SemGridColumn Classes="@(new[] { ColumnClass.Left_Aligned })">
                    <ValidationMessage For="@(() => ParentForm.userInfo.LastName)" />
                    <b>Surname</b>
                    <SemFormField For="@(() => ParentForm.userInfo.LastName)" Classes="@(new[] { FieldClass.Inline })">
                        <SemInput @bind-Value="ParentForm.userInfo.LastName"  Size="InputSize.Large" ></SemInput>
                    </SemFormField>

                    <b>Former names</b>
                    <SemFormField For="@(() => ParentForm.userInfo.FormerNames)" Classes="@(new[] { FieldClass.Inline })">
                        <SemInput @bind-Value="ParentForm.userInfo.FormerNames"  Size="InputSize.Large" ></SemInput>
                    </SemFormField>
                    
                    <ValidationMessage For="@(() => ParentForm.userInfo.FirstName)" />
                    <b>First name(s)</b>
                    <SemFormField For="@(() => ParentForm.userInfo.FirstName)" Classes="@(new[] { FieldClass.Inline })">
                        <SemInput @bind-Value="ParentForm.userInfo.FirstName"  Size="InputSize.Large"></SemInput>
                    </SemFormField>

                    <ValidationMessage For="@(() => ParentForm.userInfo.Gender)" />
                    <b>Gender</b>
                    <SemFormField For="@(() => ParentForm.userInfo.Gender)" Classes="@(new[] { FieldClass.Inline })">
                        <SemDropdownSelection @bind-Value="ParentForm.userInfo.Gender" DefaultText="Select...">
                            <ListItems>
                                <SemSelectListItem Text="male" Value="mäanlich"></SemSelectListItem>
                                <SemSelectListItem Text="female" Value="weiblich"></SemSelectListItem>
                                <SemSelectListItem Text="diverse" Value="divers"></SemSelectListItem>
                                <SemSelectListItem Text="without specification" Value="ohne Angaben"></SemSelectListItem>
                            </ListItems>
                            <ItemTemplate>
                                <span class="text">@(((SemanticBlazor.Models.ListItem)context).Text)</span>
                                <span class="description">@(((SemanticBlazor.Models.ListItem)context).Value)</span>
                            </ItemTemplate>
                        </SemDropdownSelection>
                    </SemFormField>

                    <ValidationMessage For="@(() => ParentForm.userInfo.BritishNationalities)" />
                    <b>British nationalitie(s)</b>
                    <SemFormField For="@(() => ParentForm.userInfo.BritishNationalities)" Classes="@(new[] { FieldClass.Inline })">
                        <SemDataDropdownMultiSelection @bind-Value="ParentForm.userInfo.BritishNationalities" Items="BritishNationalitiesList" DefaultText="Select..."></SemDataDropdownMultiSelection>
                    </SemFormField>
                </SemGridColumn>
            </SemGridRow>
        </SemGrid>
    </MultiStepsFormCard>
    <MultiStepsFormCard Name="Contact details" ValidationGroup="contact">
        <SemGrid Columns="GridUnit.One" Classes="@(new [] {GridClass.Centered})">
            <SemGridRow Columns="GridUnit.One">
                <SemGridColumn Classes="@(new[] { ColumnClass.Center_Aligned })">
                    <p>Contact data</p>
                    <p>Kontakt Angaben</p>
                </SemGridColumn>
            </SemGridRow>
            
            <SemGridRow>
                <SemGridColumn Wide="GridUnit.Four"></SemGridColumn>
                <SemGridColumn Wide="GridUnit.Four" Classes="@(new[] { ColumnClass.Left_Aligned})">
                    <ValidationMessage For="@(() => ParentForm.userInfo.StreetAddress)" />
                    <b>Street address</b>
                    <SemFormField For="@(() => ParentForm.userInfo.StreetAddress)" Classes="@(new[] { FieldClass.Inline})">
                        <SemInput @bind-Value="ParentForm.userInfo.StreetAddress"  Size="InputSize.Large" ></SemInput>
                    </SemFormField>
                </SemGridColumn>
                <SemGridColumn Wide="GridUnit.Four" Classes="@(new[] { ColumnClass.Left_Aligned})">
                    <ValidationMessage For="@(() => ParentForm.userInfo.Number)" />
                    <b>Number</b>
                    <SemFormField For="@(() => ParentForm.userInfo.Number)" Classes="@(new[] { FieldClass.Inline})">
                        <SemInput @bind-Value="ParentForm.userInfo.Number" Size="InputSize.Large"></SemInput>
                    </SemFormField>
                </SemGridColumn>    
            </SemGridRow>
            <SemGridRow>
                <SemGridColumn Wide="GridUnit.Four"></SemGridColumn>
                <SemGridColumn Wide="GridUnit.Four" Classes="@(new[] { ColumnClass.Left_Aligned})">
                    <ValidationMessage For="@(() => ParentForm.userInfo.ZipCode)" />
                    <b>Zip code</b>
                    <SemFormField For="@(() => ParentForm.userInfo.ZipCode)" Classes="@(new[] { FieldClass.Inline})">
                        <SemInput @bind-Value="ParentForm.userInfo.ZipCode"  Size="InputSize.Large" ></SemInput>
                    </SemFormField>
                </SemGridColumn>
                <SemGridColumn Wide="GridUnit.Four" Classes="@(new[] { ColumnClass.Left_Aligned})">
                    <ValidationMessage For="@(() => ParentForm.userInfo.City)" />
                    <b>City</b>
                    <SemFormField For="@(() => ParentForm.userInfo.City)" Classes="@(new[] { FieldClass.Inline})">
                        <SemInput @bind-Value="ParentForm.userInfo.City" Size="InputSize.Large"></SemInput>
                    </SemFormField>
                </SemGridColumn>    
            </SemGridRow>
        </SemGrid>
    </MultiStepsFormCard>
    <MultiStepsFormCard Name="Final Step">
        <div class="row">
      <p>The final step has been reached. Thank you \o/</p>
        </div>
    </MultiStepsFormCard>
</MultiStepsForm>