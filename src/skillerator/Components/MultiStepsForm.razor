<CascadingValue Value="this">
    @if (ActiveStepIx > 0){
        <div id="@Id">
            <ul class="nav nav-pills nav-justified">
                @foreach (var step in Cards.Skip(1))
                {
                    <li id="step-@(StepsIndex(step) + 1)" class="nav-item">
                        <a class="nav-link @((ActiveStep == step) ? "active" : "")" href="javascript: void(0)" 
                        @onclick="@(e=> SetActive(step))">@step.Name</a>
                    </li>
                }
            </ul>
        </div>
    }

    <SemForm Model="userInfo" OnValidSubmit="SubmitValidForm" FormValidationPosition="ValidationPosition.Hidden" FieldValidationPosition="ValidationPosition.Hidden">
    
        <FluentValidationValidator @ref="fluentValidationValidator" />
        <!--<ValidationSummary /> -->

        <div id="container-fluid">
            @ChildContent
        </div>

        <SemGrid Classes="@(new [] {GridClass.Centered})">
            <SemGridRow>
                <SemGridColumn Wide="GridUnit.Three" Classes="@(new[] { ColumnClass.Left_Aligned })"></SemGridColumn>
                <SemGridColumn Wide="GridUnit.Five" Classes="@(new[] { ColumnClass.Center_Aligned })">
                    <SemButton Color="ButtonColor.Blue" Enabled="@(ActiveStepIx > 0)" Emphasis="Emphasis.Primary" 
                        Classes="@(new[] { ButtonClass.Basic, ButtonClass.Fluid })" Size="Size.Big" OnClick="@(GoBack)">
                            @(ActiveStepIx == 0 ? "No Previous Step" : Cards[ActiveStepIx - 1].Name)
                    </SemButton>
                </SemGridColumn>
                @if(IsLastStep){
                    <SemGridColumn Wide="GridUnit.Five"Classes="@(new[] { ColumnClass.Center_Aligned })">
                        <SemButton Color="ButtonColor.Blue" Size="Size.Big" IsSubmitButton="true"
                            Classes="@(new[] { ButtonClass.Fluid })">
                                Submit
                        </SemButton>
                    </SemGridColumn>
                }else
                {
                    <SemGridColumn Wide="GridUnit.Five" Classes="@(new[] { ColumnClass.Center_Aligned })">
                        <SemButton Color="ButtonColor.Blue" Size="Size.Big" OnClick="@(GoNext)" 
                            Classes="@(new[] { ButtonClass.Fluid })">
                                @(Cards[ActiveStepIx + 1].Name)
                        </SemButton>
                    </SemGridColumn>        
                }
                <SemGridColumn Wide="GridUnit.Three" Classes="@(new[] { ColumnClass.Left_Aligned })"></SemGridColumn>
            </SemGridRow>
        </SemGrid>
    </SemForm>
</CascadingValue>